name: 🌹 Compliance Matrix Generation

on:
  workflow_dispatch:  # Manual trigger
  workflow_run:
    workflows: ["🍏 iOS CI", "🤖 Android CI", "Go CI"]
    types:
      - completed

jobs:
  validate-requirements:
    name: 📊 Validate Requirements
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout System Repository
        uses: actions/checkout@v4
      
      - name: 🔧 Setup jq
        run: sudo apt-get update && sudo apt-get install -y jq
      
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      
      - name: 📦 Install dependencies for JSON-LD validation
        run: |
          npm init -y
          npm install ajv ajv-formats
      
      - name: 🔍 Validate JSON-LD Requirements Format
        run: |
          if [ -f "requirements/requirements.jsonld" ]; then
            # Validate JSON-LD format
            jq empty requirements/requirements.jsonld
            echo "System requirements JSON format validation successful"
          else
            echo "Error: system requirements.jsonld not found"
            exit 1
          fi
          
          if [ -f "requirements/context/requirements-context.jsonld" ]; then
            # Validate context schema
            jq empty requirements/context/requirements-context.jsonld
            echo "Requirements context JSON format validation successful"
          else
            echo "Error: requirements-context.jsonld not found"
            exit 1
          fi
      
      - name: 🌟 Validate Against JSON Schema
        run: |
          if [ -f "schema/requirements-schema.json" ]; then
            # Run JSON-LD validation using our custom script
            node scripts/validate-jsonld.js schema/requirements-schema.json requirements/requirements.jsonld
            echo "Schema validation successful"
          else
            echo "Warning: requirements-schema.json not found, skipping schema validation"
          fi
  
  aggregate-compliance:
    name: 🔄 Aggregate Compliance Matrix
    runs-on: ubuntu-latest
    needs: [validate-requirements]
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        
      - name: 🔧 Setup jq
        run: sudo apt-get update && sudo apt-get install -y jq
      
      - name: 🔧 Setup GitHub CLI
        run: |
          if ! command -v gh &> /dev/null; then
            echo "Installing GitHub CLI..."
            curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
            sudo apt update
            sudo apt install gh
          fi
        
      - name: 🔑 Authenticate GitHub CLI
        run: |
          echo "${{ secrets.CROSS_REPO_TOKEN }}" | gh auth login --with-token
        
      - name: 📂 Create Components Directories
        run: |
          # Create component requirement directories with the same structure as results
          mkdir -p components/ios
          mkdir -p components/android
          mkdir -p components/ipfs
          mkdir -p compliance/results
          mkdir -p compliance/reports
      
      - name: 📥 Download iOS Requirements
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: ci.yml
          workflow_conclusion: success
          name: requirements-jsonld
          path: components/ios
          repo: journalbrand/journaltrove-ios
          github_token: ${{ secrets.CROSS_REPO_TOKEN }}
          check_artifacts: true
          if_no_artifact_found: warn
          
      - name: 📥 Download Android Requirements
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: ci.yml
          workflow_conclusion: success
          name: requirements-jsonld
          path: components/android
          repo: journalbrand/journaltrove-android
          github_token: ${{ secrets.CROSS_REPO_TOKEN }}
          check_artifacts: true
          if_no_artifact_found: warn
          
      - name: 📥 Download IPFS Requirements
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: ci.yml
          workflow_conclusion: success
          name: requirements-jsonld
          path: components/ipfs
          repo: journalbrand/journaltrove-ipfs
          github_token: ${{ secrets.CROSS_REPO_TOKEN }}
          check_artifacts: true
          if_no_artifact_found: warn
        
      - name: 📥 Download iOS Test Results
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: ci.yml
          workflow_conclusion: success
          name: ios-test-results-jsonld
          path: compliance/results/ios
          repo: journalbrand/journaltrove-ios
          github_token: ${{ secrets.CROSS_REPO_TOKEN }}
          check_artifacts: true
          if_no_artifact_found: warn
          
      - name: 📥 Download Android Test Results
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: ci.yml
          workflow_conclusion: success
          name: android-test-results-jsonld
          path: compliance/results/android
          repo: journalbrand/journaltrove-android
          github_token: ${{ secrets.CROSS_REPO_TOKEN }}
          check_artifacts: true
          if_no_artifact_found: warn
          
      - name: 📥 Download IPFS Test Results
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: ci.yml
          workflow_conclusion: success
          name: ipfs-test-results-jsonld
          path: compliance/results/ipfs
          repo: journalbrand/journaltrove-ipfs
          github_token: ${{ secrets.CROSS_REPO_TOKEN }}
          check_artifacts: true
          if_no_artifact_found: warn
      
      - name: 🔄 Aggregate Compliance Matrix
        run: |
          # Ensure script is executable
          chmod +x compliance/scripts/aggregate_jsonld_compliance.sh
          # Run the aggregation script
          ./compliance/scripts/aggregate_jsonld_compliance.sh compliance/results compliance/reports/compliance_matrix.jsonld
        
      - name: 📤 Upload Compliance Matrix
        uses: actions/upload-artifact@v4
        with:
          name: compliance-matrix-jsonld
          path: compliance/reports/compliance_matrix.jsonld
          if-no-files-found: warn
          
      - name: 📊 Update Compliance Dashboard
        run: |
          # Ensure dashboard directory exists
          mkdir -p compliance/dashboard
          
          # Copy the compliance matrix to the dashboard directory
          cp compliance/reports/compliance_matrix.jsonld compliance/dashboard/compliance_matrix.jsonld
          
          echo "Compliance dashboard updated" 